diff --git a/index-server/src/main/java/com/cmri/um/he/index/common/Constants.java b/index-server/src/main/java/com/cmri/um/he/index/common/Constants.java
index 2c6ad83..67904c2 100644
--- a/index-server/src/main/java/com/cmri/um/he/index/common/Constants.java
+++ b/index-server/src/main/java/com/cmri/um/he/index/common/Constants.java
@@ -40,5 +40,4 @@ public class Constants {
     public static int STATUS_DECLINE = 0 ;
 
 
-    public static int DEFAULT_MONTHS = 5;
 }
diff --git a/index-server/src/main/java/com/cmri/um/he/index/common/DefaultTime.java b/index-server/src/main/java/com/cmri/um/he/index/common/DefaultTime.java
index 7402d62..6cc43c1 100644
--- a/index-server/src/main/java/com/cmri/um/he/index/common/DefaultTime.java
+++ b/index-server/src/main/java/com/cmri/um/he/index/common/DefaultTime.java
@@ -13,18 +13,22 @@ import java.util.Map;
  */
 public class DefaultTime {
 
-    /**
-     * 默认展示时获取查询时间通用方法
-     * @param findTime
-     * @param i
-     * @return
-     */
+
+//    public static void main(String[] args) throws Exception {
+//
+//        String times = getDefaultTimes(Constants.MONTH, 6, "2018-09");
+//
+//        System.out.println(times);
+//        Map<String, String> defaultTime = getDefaultTime(Constants.MONTH, 6);
+//
+//        System.out.println(defaultTime.get("startTime"));
+//    }
 
     public static Map<String,String> getDefaultTime(String findTime,int i){
         HashMap<String, String> map = new HashMap<>(2);
         Calendar cal = Calendar.getInstance();
         SimpleDateFormat format = new SimpleDateFormat("yyyy-MM");
-        String endTime=format.format(new Date());
+       // String endTime=format.format(new Date());
         if (Constants.WEEK.equalsIgnoreCase(findTime)) {
             cal.add(Calendar.WEEK_OF_MONTH, -i);
         }
@@ -38,12 +42,33 @@ public class DefaultTime {
 
         String[] split = startTime.split("-");
         startTime=split[0]+split[1];
-        String[] split1 = endTime.split("-");
-        endTime=split1[0]+split1[1];
+//        String[] split1 = endTime.split("-");
+//        endTime=split1[0]+split1[1];
         map.put("startTime",startTime);
-        map.put("endTime",endTime);
+       // map.put("endTime",endTime);
         return map;
 
     }
+    public static String getDefaultTimes(String findTime,int i,String month)throws Exception{
+
+        Calendar cal = Calendar.getInstance();
+        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM");
+        Date parse = format.parse(month);
+        cal.setTime(parse);
+        if (Constants.WEEK.equalsIgnoreCase(findTime)) {
+            cal.add(Calendar.WEEK_OF_MONTH, -i);
+        }
+        else if(Constants.MONTH.equalsIgnoreCase(findTime)){
+            cal.add(Calendar.MONTH, -i);
+        }
+        else if (Constants.YEAR.equalsIgnoreCase(findTime)) {
+            cal.add(Calendar.YEAR, -i);
+        }
+        String startTime=format.format(cal.getTime());
+        String[] split = startTime.split("-");
+        startTime=split[0]+split[1];
 
+        return startTime;
+
+    }
 }
diff --git a/index-server/src/main/java/com/cmri/um/he/index/market/controller/AppMarketAddController.java b/index-server/src/main/java/com/cmri/um/he/index/market/controller/AppMarketAddController.java
index 58f9c56..71cb074 100644
--- a/index-server/src/main/java/com/cmri/um/he/index/market/controller/AppMarketAddController.java
+++ b/index-server/src/main/java/com/cmri/um/he/index/market/controller/AppMarketAddController.java
@@ -1,7 +1,85 @@
 package com.cmri.um.he.index.market.controller;
 
 import com.cmri.spring.common.controller.ZRestController;
+import com.cmri.spring.common.data.ResponseMessage;
+import com.cmri.um.he.index.market.service.AppMarketAddService;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.web.bind.annotation.*;
 
+import java.util.List;
+import java.util.Map;
+/**
+ * 默认展示时获取查询时间通用方法
+ * @author shihao
+ * Created on 2018/8/1
+ */
+@RestController
+@CrossOrigin
 public class AppMarketAddController extends ZRestController {
 
+    @Autowired
+    private AppMarketAddService appMarketAddService;
+
+    /**
+     * 应用新增页面本月数据展示
+     * @param category
+     * @param app
+     * @param month
+     * @return
+     */
+    @RequestMapping(value = "app-market-addnumber",method = RequestMethod.GET)
+    public ResponseMessage getAppNumber(@RequestParam Integer category , @RequestParam Integer app, @RequestParam String month){
+        List<Map<String, Object>> list=appMarketAddService.getAppNumber(category,app,month);
+        ResponseMessage responseMessage =this.genResponseMessage();
+        responseMessage.set("list",list);
+        return  responseMessage;
+    }
+
+    /**
+     * 应用新增页面新增活跃用户展示
+     * @param app
+     * @param startTime
+     * @param endTime
+     * @param status
+     * @return
+     */
+    @RequestMapping(value = "app-market-adduser",method = RequestMethod.GET)
+    public ResponseMessage getAppUser(@RequestParam Integer app, @RequestParam String startTime,@RequestParam String endTime,String status){
+        List<Map<String, Object>> list=appMarketAddService.getAppUser(app,startTime,endTime,status);
+        ResponseMessage responseMessage =this.genResponseMessage();
+        responseMessage.set("list",list);
+        return  responseMessage;
+    }
+
+    /**
+     * 应用新增页面新增次月留存率展示
+     * @param app
+     * @param startTime
+     * @param endTime
+     * @param status
+     * @return
+     */
+    @RequestMapping(value = "app-market-addrate",method = RequestMethod.GET)
+    public ResponseMessage getRate(@RequestParam Integer app , @RequestParam String startTime, @RequestParam String endTime,@RequestParam String status){
+        List list = appMarketAddService.getAddRate(app,startTime,endTime,status);
+        ResponseMessage responseMessage=this.genResponseMessage();
+        responseMessage.set("list",list);
+        return responseMessage;
+    }
+
+    /**
+     * 应用新增页面用户新增数据统计表展示
+     * @param app
+     * @param startTime
+     * @param endTime
+     * @param status
+     * @return
+     */
+    @RequestMapping(value = "app-market-addcount",method = RequestMethod.GET)
+    public ResponseMessage getCountNumber(@RequestParam Integer app , @RequestParam String startTime, @RequestParam String endTime,@RequestParam String status){
+        List list = appMarketAddService.getCountNumber(app,startTime,endTime,status);
+        ResponseMessage responseMessage=this.genResponseMessage();
+        responseMessage.set("list",list);
+        return responseMessage;
+    }
 }
diff --git a/index-server/src/main/java/com/cmri/um/he/index/market/controller/AppMarketController.java b/index-server/src/main/java/com/cmri/um/he/index/market/controller/AppMarketController.java
index 0e98768..85c2ae5 100644
--- a/index-server/src/main/java/com/cmri/um/he/index/market/controller/AppMarketController.java
+++ b/index-server/src/main/java/com/cmri/um/he/index/market/controller/AppMarketController.java
@@ -33,9 +33,9 @@ public class AppMarketController extends ZRestController {
     }
 
     @RequestMapping(value = "app-market-query",method = RequestMethod.GET)
-    public ResponseMessage getMarket(@RequestParam Integer category ,@RequestParam String month1,@RequestParam String month2,@RequestParam String status ){
+    public ResponseMessage getMarket(@RequestParam Integer category ,@RequestParam String startTime,@RequestParam String endTime,@RequestParam String status ){
 
-        List<Map<String ,Object>> list=appMarketService.getMarket(category,month1,month2,status);;
+        List<Map<String ,Object>> list=appMarketService.getMarket(category,startTime,endTime,status);;
 
         Map<String,Object> map1 = new HashMap();
         Map<String,Object> map2 = new HashMap();
diff --git a/index-server/src/main/java/com/cmri/um/he/index/market/controller/AppMarketGeneralController.java b/index-server/src/main/java/com/cmri/um/he/index/market/controller/AppMarketGeneralController.java
index 82b7fe2..71478a8 100644
--- a/index-server/src/main/java/com/cmri/um/he/index/market/controller/AppMarketGeneralController.java
+++ b/index-server/src/main/java/com/cmri/um/he/index/market/controller/AppMarketGeneralController.java
@@ -11,7 +11,7 @@ import java.util.List;
 import java.util.Map;
 /**
  * 默认展示时获取查询时间通用方法
- * @author macha
+ * @author shihao
  * Created on 2018/7/30
  */
 @RestController
@@ -29,9 +29,9 @@ public class AppMarketGeneralController extends ZRestController {
      * @return
      */
     @RequestMapping(value = "query-length-time",method = RequestMethod.GET)
-    public ResponseMessage getLengthTime(@RequestParam Integer app , @RequestParam String month1, @RequestParam String month2,@RequestParam String status){
+    public ResponseMessage getLengthTime(@RequestParam Integer app , @RequestParam String startTime, @RequestParam String endTime,@RequestParam String status){
 
-        List<Map<String , Object>> list = appMarketGeneralService.getLengthTime(app,month1,month2,status);
+        List<Map<String , Object>> list = appMarketGeneralService.getLengthTime(app,startTime,endTime,status);
         List<String> list1=new ArrayList<>();
         List<Double> list2=new ArrayList<>();
         List<Double> list3=new ArrayList<>();
@@ -58,8 +58,8 @@ public class AppMarketGeneralController extends ZRestController {
      * @return
      */
     @RequestMapping(value = "quary-general-statistic",method = RequestMethod.GET)
-    public ResponseMessage quaryGeneralStatistic(@RequestParam Integer app , @RequestParam String month1, @RequestParam String month2,@RequestParam String status){
-        List<Map<String , Object>> list = appMarketGeneralService.quaryGeneralStatistic(app,month1,month2,status);
+    public ResponseMessage quaryGeneralStatistic(@RequestParam Integer app , @RequestParam String startTime, @RequestParam String endTime,@RequestParam String status){
+        List<Map<String , Object>> list = appMarketGeneralService.quaryGeneralStatistic(app,startTime,endTime,status);
         ResponseMessage responseMessage = this.genResponseMessage();
         responseMessage.set("list",list);
         return responseMessage;
@@ -71,8 +71,8 @@ public class AppMarketGeneralController extends ZRestController {
      * @return
      */
     @RequestMapping(value = "app-market-rate",method = RequestMethod.GET)
-    public ResponseMessage getRate(@RequestParam Integer app , @RequestParam String month1, @RequestParam String month2,@RequestParam String status){
-        List list = appMarketGeneralService.getRate(app,month1,month2,status);
+    public ResponseMessage getRate(@RequestParam Integer app , @RequestParam String startTime, @RequestParam String endTime,@RequestParam String status){
+        List list = appMarketGeneralService.getRate(app,startTime,endTime,status);
         ResponseMessage responseMessage=this.genResponseMessage();
         responseMessage.set("list",list);
 
@@ -87,8 +87,8 @@ public class AppMarketGeneralController extends ZRestController {
      * @return
      */
     @RequestMapping(value = "app-market-num",method = RequestMethod.GET)
-    public ResponseMessage getUserNumber(Integer app,String month1,String month2,@RequestParam String status){
-        List<Map<String, Object>> list=appMarketGeneralService.getUserNumber(app,month1,month2,status);
+    public ResponseMessage getUserNumber(Integer app,String startTime,String endTime,@RequestParam String status){
+        List<Map<String, Object>> list=appMarketGeneralService.getUserNumber(app,startTime,endTime,status);
         List<Integer> list1=new ArrayList();
         List<Double> list2=new ArrayList();
         List<String> list3=new ArrayList();
@@ -135,8 +135,8 @@ public class AppMarketGeneralController extends ZRestController {
      * @return
      */
     @RequestMapping(value = "/queryCumulative",method = RequestMethod.GET)
-    public ResponseMessage queryCumulative(@RequestParam int app, @RequestParam String month1,@RequestParam String month2,@RequestParam String status) {
-        List<Map<String, Object>> list=appMarketGeneralService.getCumulativeList(app, month1, month2,status);;
+    public ResponseMessage queryCumulative(@RequestParam int app, @RequestParam String startTime,@RequestParam String endTime,@RequestParam String status) {
+        List<Map<String, Object>> list=appMarketGeneralService.getCumulativeList(app, startTime, endTime,status);
         List<Integer> list1 = new ArrayList();
         List<String> list2 = new ArrayList();
         for ( Map<String, Object> map :list) {
diff --git a/index-server/src/main/java/com/cmri/um/he/index/market/dao/AppMarketAddDao.java b/index-server/src/main/java/com/cmri/um/he/index/market/dao/AppMarketAddDao.java
new file mode 100644
index 0000000..d6c147d
--- /dev/null
+++ b/index-server/src/main/java/com/cmri/um/he/index/market/dao/AppMarketAddDao.java
@@ -0,0 +1,124 @@
+package com.cmri.um.he.index.market.dao;
+
+import com.cmri.um.he.index.market.mapper.AppMarketAddMapper;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Repository;
+
+import java.util.List;
+import java.util.Map;
+/**
+ * 默认展示时获取查询时间通用方法
+ * @author shihao
+ * Created on 2018/8/1
+ */
+@Repository
+public class AppMarketAddDao {
+
+    @Autowired
+    private AppMarketAddMapper mapper;
+
+    /**
+     * 应用新增页面本月数据展示
+     * @param category
+     * @param app
+     * @param month
+     * @return
+     */
+    public List<Map<String, Object>> getAppNumber(Integer category, Integer app, String month){
+        return mapper.getAppNumber(category,app,month);
+    }
+
+    /**
+     * 应用新增页面新增活跃用户展示(根据月份区间)
+     * @param app
+     * @param startTime
+     * @param endTime
+     * @return
+     */
+    public List<Map<String, Object>> getAppUserByMonth(Integer app, String startTime, String endTime){
+        return mapper.getAppUserByMonth(app,startTime,endTime);
+    }
+    /**
+     * 应用新增页面新增活跃用户展示(根据周区间)
+     * @param app
+     * @param startTime
+     * @param endTime
+     * @return
+     */
+    public List<Map<String, Object>> getAppUserByWeek(Integer app, String startTime, String endTime){
+        return mapper.getAppUserByWeek(app,startTime,endTime);
+    }
+    /**
+     * 应用新增页面新增活跃用户展示(根据日区间)
+     * @param app
+     * @param startTime
+     * @param endTime
+     * @return
+     */
+    public List<Map<String, Object>> getAppUserByDate(Integer app, String startTime, String endTime){
+        return mapper.getAppUserByDate(app,startTime,endTime);
+    }
+    /**
+     * 应用新增页面新增次月留存率展示(根据月区间)
+     * @param app
+     * @param startTime
+     * @param endTime
+     * @return
+     */
+    public List<Map<String, Object>> getAddRateByMonth(Integer app, String startTime, String endTime){
+        return mapper.getAddRateByMonth(app,startTime,endTime);
+    }
+    /**
+     * 应用新增页面新增次月留存率展示(根据周区间)
+     * @param app
+     * @param startTime
+     * @param endTime
+     * @return
+     */
+    public List<Map<String, Object>> getAddRateByWeek(Integer app, String startTime, String endTime){
+        return mapper.getAddRateByWeek(app,startTime,endTime);
+    }
+    /**
+     * 应用新增页面新增次月留存率展示(根据日区间)
+     * @param app
+     * @param startTime
+     * @param endTime
+     * @return
+     */
+    public List<Map<String, Object>> getAddRateByDate(Integer app, String startTime, String endTime){
+        return mapper.getAddRateByDate(app,startTime,endTime);
+    }
+
+
+    /**
+     * 应用新增页面用户新增数据统计表展示(根据月区间)
+     * @param app
+     * @param startTime
+     * @param endTime
+     * @return
+     */
+    public List<Map<String, Object>> getCountNumberByMonth(Integer app, String startTime, String endTime){
+        return mapper.getCountNumberByMonth(app,startTime,endTime);
+    }
+    /**
+     * 应用新增页面用户新增数据统计表展示(根据周区间)
+     * @param app
+     * @param startTime
+     * @param endTime
+     * @return
+     */
+    public List<Map<String, Object>> getCountNumberByWeek(Integer app, String startTime, String endTime){
+        return mapper.getCountNumberByWeek(app,startTime,endTime);
+    }
+    /**
+     * 应用新增页面用户新增数据统计表展示(根据日区间)
+     * @param app
+     * @param startTime
+     * @param endTime
+     * @return
+     */
+    public List<Map<String, Object>> getCountNumberByDate(Integer app, String startTime, String endTime){
+        return mapper.getCountNumberByDate(app,startTime,endTime);
+    }
+
+}
diff --git a/index-server/src/main/java/com/cmri/um/he/index/market/mapper/AppMarketAddMapper.java b/index-server/src/main/java/com/cmri/um/he/index/market/mapper/AppMarketAddMapper.java
new file mode 100644
index 0000000..1595dfe
--- /dev/null
+++ b/index-server/src/main/java/com/cmri/um/he/index/market/mapper/AppMarketAddMapper.java
@@ -0,0 +1,118 @@
+package com.cmri.um.he.index.market.mapper;
+
+import org.apache.ibatis.annotations.Mapper;
+import org.apache.ibatis.annotations.Param;
+import org.apache.ibatis.annotations.Select;
+
+import java.util.List;
+import java.util.Map;
+/**
+ * 默认展示时获取查询时间通用方法
+ * @author shihao
+ * Created on 2018/8/1
+ */
+@Mapper
+public interface AppMarketAddMapper {
+
+    /**
+     * 应用新增页面本月数据展示
+     * @param category
+     * @param app
+     * @param month
+     * @return
+     */
+    @Select("SELECT new_user, new_user_retention_rate AS rate from app_market where category=#{category} AND app=#{app} AND month=#{month}")
+    List<Map<String, Object>> getAppNumber(@Param("category") Integer category,@Param("app") Integer app,@Param("month") String month);
+
+    /**
+     * 应用新增页面新增活跃用户展示(根据月份区间)
+     * @param app
+     * @param startTime
+     * @param endTime
+     * @return
+     */
+    @Select("SELECT new_user ,month AS time from app_market where app=#{app} and month BETWEEN #{startTime} AND #{endTime} order by month")
+    List<Map<String, Object>> getAppUserByMonth(@Param("app") Integer app,@Param("startTime") String startTime,@Param("endTime") String endTime);
+    /**
+     * 应用新增页面新增活跃用户展示(根据周区间)
+     * @param app
+     * @param startTime
+     * @param endTime
+     * @return
+     */
+    @Select("SELECT new_user ,week AS time from app_market_week where app=#{app} and week BETWEEN #{startTime} AND #{endTime} order by week")
+    List<Map<String, Object>> getAppUserByWeek(@Param("app") Integer app,@Param("startTime") String startTime,@Param("endTime") String endTime);
+    /**
+     * 应用新增页面新增活跃用户展示(根据日区间)
+     * @param app
+     * @param startTime
+     * @param endTime
+     * @return
+     */
+    @Select("SELECT new_user ,date AS time from app_market_date where app=#{app} and date BETWEEN #{startTime} AND #{endTime} order by date")
+    List<Map<String, Object>> getAppUserByDate(@Param("app") Integer app,@Param("startTime") String startTime,@Param("endTime") String endTime);
+
+    /**
+     * 应用新增页面新增次月留存率展示(根据月区间)
+     * @param app
+     * @param startTime
+     * @param endTime
+     * @return
+     */
+    @Select("select category,app, month ,mau_number ,new_user_retention_rate  from app_market \n" +
+            "where app=#{app} and month BETWEEN #{startTime} and #{endTime} ORDER BY month desc\n")
+    List<Map<String, Object>> getAddRateByMonth(@Param("app")Integer app,@Param("startTime")String startTime,@Param("endTime")String endTime);
+    /**
+     * 应用新增页面新增次月留存率展示(根据周区间)
+     * @param app
+     * @param startTime
+     * @param endTime
+     * @return
+     */
+    @Select("select category,app, week ,weekly_active ,new_user_retention_rate  from app_market_week \n" +
+            "where app=#{app} and week BETWEEN #{startTime} and #{endTime} ORDER BY week desc \n")
+    List<Map<String, Object>> getAddRateByWeek(@Param("app")Integer app,@Param("startTime")String startTime,@Param("endTime")String endTime);
+
+    /**
+     * 应用新增页面新增次月留存率展示(根据日区间)
+     * @param app
+     * @param startTime
+     * @param endTime
+     * @return
+     */
+    @Select("select category,app, date ,dately_active ,new_user_retention_rate  from app_market_date \n" +
+            "where app=#{app} and date BETWEEN #{startTime} and #{endTime} ORDER BY date desc \n")
+    List<Map<String, Object>> getAddRateByDate(@Param("app")Integer app,@Param("startTime")String startTime,@Param("endTime")String endTime);
+
+    /**
+     * 应用新增页面用户新增数据统计表展示(根据月区间)
+     * @param app
+     * @param startTime
+     * @param endTime
+     * @return
+     */
+    @Select("SELECT month AS time ,total_user,penetration_rate FROM app_market \n" +
+            "where app=#{app} and month BETWEEN #{startTime} AND #{endTime} order by month desc")
+    List<Map<String, Object>> getCountNumberByMonth(@Param("app")Integer app,@Param("startTime")String startTime,@Param("endTime")String endTime);
+
+    /**
+     * 应用新增页面用户新增数据统计表展示(根据周区间)
+     * @param app
+     * @param startTime
+     * @param endTime
+     * @return
+     */
+    @Select("SELECT week AS time ,total_active_num AS total_user,penetration_rate FROM app_market_week \n" +
+            "where app=#{app} and week BETWEEN #{startTime} AND #{endTime} order by week desc")
+    List<Map<String, Object>> getCountNumberByWeek(@Param("app")Integer app,@Param("startTime")String startTime,@Param("endTime")String endTime);
+    /**
+     * 应用新增页面用户新增数据统计表展示(根据日区间)
+     * @param app
+     * @param startTime
+     * @param endTime
+     * @return
+     */
+    @Select("SELECT date AS time ,total_active_num AS total_user,penetration_rate FROM app_market_date \n" +
+            "where app=#{app} and date BETWEEN #{startTime} AND #{endTime} order by date desc")
+    List<Map<String, Object>> getCountNumberByDate(@Param("app")Integer app,@Param("startTime")String startTime,@Param("endTime")String endTime);
+}
diff --git a/index-server/src/main/java/com/cmri/um/he/index/market/mapper/AppMarketGeneralMapper.java b/index-server/src/main/java/com/cmri/um/he/index/market/mapper/AppMarketGeneralMapper.java
index 44c9e64..c777572 100644
--- a/index-server/src/main/java/com/cmri/um/he/index/market/mapper/AppMarketGeneralMapper.java
+++ b/index-server/src/main/java/com/cmri/um/he/index/market/mapper/AppMarketGeneralMapper.java
@@ -170,7 +170,7 @@ public interface AppMarketGeneralMapper {
      * @param month2
      * @return
      */
-    @Select(" SELECT am.total_user,am.`month` FROM app_market am WHERE am.app=#{app} and am.`week` BETWEEN #{month1} and #{month2} ")
+    @Select(" SELECT am.total_user,am.`month` FROM app_market am WHERE am.app=#{app} and am.`month` BETWEEN #{month1} and #{month2} ")
     List<Map<String,Object>> getCumulativeListByMonth(@Param("app") int app,@Param("month1") String month1,@Param("month2") String month2);
 
     /**
diff --git a/index-server/src/main/java/com/cmri/um/he/index/market/service/AppMarketAddService.java b/index-server/src/main/java/com/cmri/um/he/index/market/service/AppMarketAddService.java
new file mode 100644
index 0000000..a863ffc
--- /dev/null
+++ b/index-server/src/main/java/com/cmri/um/he/index/market/service/AppMarketAddService.java
@@ -0,0 +1,49 @@
+package com.cmri.um.he.index.market.service;
+
+import java.util.List;
+import java.util.Map;
+/**
+ * 默认展示时获取查询时间通用方法
+ * @author shihao
+ * Created on 2018/8/1
+ */
+public interface AppMarketAddService {
+    /**
+     * 应用新增页面本月数据展示
+     * @param category
+     * @param app
+     * @param month
+     * @return
+     */
+    List<Map<String, Object>> getAppNumber(Integer category,Integer app,String month);
+
+    /**
+     * 应用新增页面新增活跃用户展示
+     * @param app
+     * @param startTime
+     * @param endTime
+     * @param status
+     * @return
+     */
+    List<Map<String, Object>> getAppUser(Integer app,String startTime,String endTime,String status);
+
+    /**
+     * 应用新增页面新增次月留存率展示
+     * @param app
+     * @param startTime
+     * @param endTime
+     * @param status
+     * @return
+     */
+    List<Map<String, Object>> getAddRate(Integer app,String startTime,String endTime,String status);
+
+    /**
+     * 应用新增页面用户新增数据统计表展示
+     * @param app
+     * @param startTime
+     * @param endTime
+     * @param status
+     * @return
+     */
+    List<Map<String, Object>> getCountNumber(Integer app,String startTime,String endTime,String status);
+}
diff --git a/index-server/src/main/java/com/cmri/um/he/index/market/service/impl/AppMarketAddServiceImpl.java b/index-server/src/main/java/com/cmri/um/he/index/market/service/impl/AppMarketAddServiceImpl.java
new file mode 100644
index 0000000..8cd86f1
--- /dev/null
+++ b/index-server/src/main/java/com/cmri/um/he/index/market/service/impl/AppMarketAddServiceImpl.java
@@ -0,0 +1,279 @@
+package com.cmri.um.he.index.market.service.impl;
+
+import com.cmri.um.he.index.common.Constants;
+import com.cmri.um.he.index.common.DefaultTime;
+import com.cmri.um.he.index.market.dao.AppMarketAddDao;
+import com.cmri.um.he.index.market.service.AppMarketAddService;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+
+import java.util.*;
+/**
+ * 默认展示时获取查询时间通用方法
+ * @author shihao
+ * Created on 2018/8/1
+ */
+@Service
+public class AppMarketAddServiceImpl implements AppMarketAddService {
+
+    @Autowired
+    private AppMarketAddDao appMarketAddDao;
+
+    /**
+     * 应用新增页面本月数据展示
+     *
+     * @param category
+     * @param app
+     * @param month
+     * @return
+     */
+    @Override
+    public List<Map<String, Object>> getAppNumber(Integer category, Integer app, String month) {
+        String st1 = month.substring(0,4);
+        String st2 = month.substring(4);
+        String months = st1 + "-" + st2;
+        try {
+            String defaultTime = DefaultTime.getDefaultTimes(Constants.MONTH, 1, months);
+            List<Map<String, Object>> list1 = appMarketAddDao.getAppNumber(category, app, month);
+            List<Map<String, Object>> list2 = appMarketAddDao.getAppNumber(category, app, defaultTime);
+
+            if ((int) list1.get(0).get("new_user") > (int) list2.get(0).get("new_user")) {
+                list1.get(0).put("new_userSatte", 1);
+            } else {
+                list1.get(0).put("new_userSatte", 0);
+            }
+            if ((double) list1.get(0).get("rate") > (double) list2.get(0).get("rate")) {
+                list1.get(0).put("rateSatte", 1);
+            } else {
+                list1.get(0).put("rateSatte", 0);
+            }
+            if (list2 == null && list2.size() == 0) {
+                list1.get(0).put("new_userSatte", 1);
+                list1.get(0).put("rateSatte", 1);
+            }
+            return list1;
+        } catch (Exception e) {
+            return null;
+        }
+    }
+
+    /**
+     * 应用新增页面新增活跃用户展示
+     *
+     * @param app
+     * @param startTime
+     * @param endTime
+     * @param status
+     * @return
+     */
+    @Override
+    public List<Map<String, Object>> getAppUser(Integer app, String startTime, String endTime, String status) {
+        if (status.equals("month")) {
+            if (startTime.equals("null")) {
+                String st1 = endTime.substring(0,4);
+                String st2 = endTime.substring(4);
+                String months = st1 + "-" + st2;
+                try {
+                    String defaultTime = DefaultTime.getDefaultTimes(Constants.YEAR, 1, months);
+                    return  appMarketAddDao.getAppUserByMonth(app, defaultTime, endTime);
+                } catch (Exception e) {
+                    e.printStackTrace();
+                    return null;
+                }
+            }else {
+                return appMarketAddDao.getAppUserByMonth(app, startTime, endTime);
+            }
+        } else if (status.equals("week")) {
+            return appMarketAddDao.getAppUserByWeek(app, startTime, endTime);
+        } else {
+            return appMarketAddDao.getAppUserByDate(app, startTime, endTime);
+        }
+    }
+
+    /**
+     * 应用新增页面新增次月留存率展示
+     *
+     * @param app
+     * @param startTime
+     * @param endTime
+     * @param status
+     * @return
+     */
+    @Override
+    public List<Map<String, Object>> getAddRate(Integer app, String startTime, String endTime, String status) {
+        List<Map<String, Object>> lists = new ArrayList<>();
+        Map<String, Object> map = new HashMap<>();
+        if (status.equals("month")) {
+            if (startTime.equals("null")) {
+                String st1 = endTime.substring(0,4);
+                String st2 = endTime.substring(4);
+                String months = st1 + "-" + st2;
+                try {
+                    String defaultTime = DefaultTime.getDefaultTimes(Constants.YEAR, 1, months);
+                    List<Map<String, Object>> maplist = appMarketAddDao.getAddRateByMonth(app, defaultTime, endTime);
+                    List list = new ArrayList();
+                    List listmonth = new ArrayList();
+                    List listmau = new ArrayList();
+                    for (Map<String, Object> ob : maplist) {
+                        Object month = ob.get("month");
+                        listmonth.add(month);
+                        Object mau_number = ob.get("mau_number");
+                        listmau.add(mau_number);
+                    }
+                    //次月存活率
+                    for (int i = 0; i < listmonth.size(); i++) {
+                        startTime = (String) listmonth.get(i);
+                        endTime = (String) listmonth.get(0);
+                        List<Map<String, Object>> list2 = appMarketAddDao.getAddRateByMonth(app, startTime, endTime);
+                        Collections.reverse(list2);
+                        List list4 = new ArrayList();
+                        for (Map<String, Object> obmap : list2) {
+                            Object keep_rate = obmap.get("new_user_retention_rate");
+                            list4.add(keep_rate);
+                        }
+                        list.add(list4);
+                    }
+                    map.put("rate", list);
+                    String[] st = {"时间", "活跃用户数(万)", "第2月", "第3月", "第4月", "第5月", "第6月", "第7月", "第8月", "第9月"};
+                    map.put("time", listmonth);
+                    map.put("num", listmau);
+                    map.put("title", st);
+                    lists.add(map);
+                    return lists;
+                } catch (Exception e) {
+                    e.printStackTrace();
+                    return null;
+                }
+            } else {
+                List list = new ArrayList();
+                List<Map<String, Object>> maplist = appMarketAddDao.getAddRateByMonth(app, startTime, endTime);
+                List listmonth = new ArrayList();
+                List listmau = new ArrayList();
+                for (Map<String, Object> ob : maplist) {
+                    Object month = ob.get("month");
+                    listmonth.add(month);
+                    Object mau_number = ob.get("mau_number");
+                    listmau.add(mau_number);
+                }
+                //次月存活率
+                for (int i = 0; i < listmonth.size(); i++) {
+                    startTime = (String) listmonth.get(i);
+                    endTime = (String) listmonth.get(0);
+                    List<Map<String, Object>> list2 = appMarketAddDao.getAddRateByMonth(app, startTime, endTime);
+                    Collections.reverse(list2);
+                    List list4 = new ArrayList();
+                    for (Map<String, Object> obmap : list2) {
+                        Object keep_rate = obmap.get("new_user_retention_rate");
+                        list4.add(keep_rate);
+                    }
+                    list.add(list4);
+                }
+                String[] st = {"时间", "活跃用户数(万)", "第2月", "第3月", "第4月", "第5月", "第6月", "第7月", "第8月", "第9月"};
+                map.put("time", listmonth);
+                map.put("user_number", listmau);
+                map.put("title", st);
+                map.put("rate", list);
+                lists.add(map);
+                return lists;
+            }
+        } else if (status.equals("week")) {
+            List list = new ArrayList();
+            List<Map<String, Object>> maplist = appMarketAddDao.getAddRateByWeek(app, startTime, endTime);
+            List listweek = new ArrayList();
+            List listmau = new ArrayList();
+            for (Map<String, Object> ob : maplist) {
+                Object week = ob.get("week");
+                listweek.add(week);
+                Object weeky_active = ob.get("weekly_active");
+                listmau.add(weeky_active);
+            }
+            //次周存活率
+            for (int i = 0; i < listweek.size(); i++) {
+                startTime = (String) listweek.get(i);
+                endTime = (String) listweek.get(0);
+                List<Map<String, Object>> list2 = appMarketAddDao.getAddRateByWeek(app, startTime, endTime);
+                Collections.reverse(list2);
+                List list4 = new ArrayList();
+                for (Map<String, Object> obmap : list2) {
+                    Object keep_rate = obmap.get("new_user_retention_rate");
+                    list4.add(keep_rate);
+                }
+                list.add(list4);
+            }
+
+            String[] st = {"时间", "活跃用户数(万)", "第2周", "第3周", "第4周", "第5周", "第6周", "第7周", "第8周", "第9周"};
+            map.put("time", listweek);
+            map.put("user_number", listmau);
+            map.put("title", st);
+            map.put("rate", list);
+            lists.add(map);
+            return lists;
+
+        } else {
+            List list = new ArrayList();
+            List<Map<String, Object>> maplist = appMarketAddDao.getAddRateByDate(app, startTime, endTime);
+            List listdate = new ArrayList();
+            List listmau = new ArrayList();
+            for (Map<String, Object> ob : maplist) {
+                Object date = ob.get("date");
+                listdate.add(date);
+                Object dately_active = ob.get("dately_active");
+                listmau.add(dately_active);
+            }
+            //次日存活率
+            for (int i = 0; i < listdate.size(); i++) {
+                startTime = (String) listdate.get(i);
+                endTime = (String) listdate.get(0);
+                List<Map<String, Object>> list2 = appMarketAddDao.getAddRateByDate(app, startTime, endTime);
+                Collections.reverse(list2);
+                List list4 = new ArrayList();
+                for (Map<String, Object> obmap : list2) {
+                    Object keep_rate = obmap.get("new_user_retention_rate");
+                    list4.add(keep_rate);
+                }
+                list.add(list4);
+            }
+            String[] st = {"时间", "活跃用户数(万)", "第2日", "第3日", "第4日", "第5日", "第6日", "第7日", "第15日", "第30日"};
+            map.put("time", listdate);
+            map.put("user_number", listmau);
+            map.put("title", st);
+            map.put("rate", list);
+            lists.add(map);
+            return lists;
+        }
+    }
+
+    /**
+     * 应用新增页面用户新增数据统计表展示
+     * @param app
+     * @param startTime
+     * @param endTime
+     * @param status
+     * @return
+     */
+    @Override
+    public List<Map<String, Object>> getCountNumber(Integer app, String startTime, String endTime, String status) {
+        if (status.equals("month")) {
+            if (startTime.equals("null")) {
+                String st1 = endTime.substring(0,4);
+                String st2 = endTime.substring(4);
+                String months = st1 + "-" + st2;
+                try {
+                    String defaultTime = DefaultTime.getDefaultTimes(Constants.YEAR, 1, months);
+                    return  appMarketAddDao.getCountNumberByMonth(app, defaultTime, endTime);
+                } catch (Exception e) {
+                    e.printStackTrace();
+                    return null;
+                }
+            }else {
+                return  appMarketAddDao.getCountNumberByMonth(app, startTime, endTime);
+            }
+        } else if (status.equals("week")) {
+            return appMarketAddDao.getCountNumberByWeek(app, startTime, endTime);
+        } else {
+            return appMarketAddDao.getCountNumberByDate(app, startTime, endTime);
+        }
+    }
+
+}
+
diff --git a/index-server/src/main/java/com/cmri/um/he/index/market/service/impl/AppMarketGeneralServiceImpl.java b/index-server/src/main/java/com/cmri/um/he/index/market/service/impl/AppMarketGeneralServiceImpl.java
index 7e5b0a8..b2b2e3f 100644
--- a/index-server/src/main/java/com/cmri/um/he/index/market/service/impl/AppMarketGeneralServiceImpl.java
+++ b/index-server/src/main/java/com/cmri/um/he/index/market/service/impl/AppMarketGeneralServiceImpl.java
@@ -30,12 +30,21 @@ public class AppMarketGeneralServiceImpl implements AppMarketGeneralService{
     @Override
     public List<Map<String, Object>> getLengthTime(Integer app, String month1, String month2,String status) {
         if(status.equals("month")){
-            if (month1.equals("null")){
-                int month1s= Integer.parseInt(month2);
-                month1s=month1s-Constants.DEFAULT_MONTH;
-                month1=Integer.toString(month1s);
+            if (month1.equals("null")) {
+                String st1 = month2.substring(0,4);
+                String st2 = month2.substring(4);
+                String months = st1 + "-" + st2;
+                try {
+                    String defaultTime = DefaultTime.getDefaultTimes(Constants.YEAR, 1, months);
+                    return appMarketGeneralDao.getLengthTimeBymonth(app,defaultTime,month2);
+                } catch (Exception e) {
+                    e.printStackTrace();
+                    return null;
+                }
+            }else {
+                return appMarketGeneralDao.getLengthTimeBymonth(app,month1,month2);
             }
-            return appMarketGeneralDao.getLengthTimeBymonth(app,month1,month2);
+
         }else if(status.equals("week")){
             return appMarketGeneralDao.getLengthTimeByWeek(app,month1,month2);
         }else {
@@ -55,12 +64,21 @@ public class AppMarketGeneralServiceImpl implements AppMarketGeneralService{
     public List<Map<String, Object>> quaryGeneralStatistic(Integer app, String month1, String month2 ,String status) {
 
         if(status.equals("month")){
-            if (month1.equals("null")){
-                int month1s= Integer.parseInt(month2);
-                month1s=month1s-Constants.DEFAULT_MONTH;
-                month1=Integer.toString(month1s);
+            if (month1.equals("null")) {
+                String st1 = month2.substring(0,4);
+                String st2 = month2.substring(4);
+                String months = st1 + "-" + st2;
+                try {
+                    String defaultTime = DefaultTime.getDefaultTimes(Constants.YEAR, 1, months);
+                    return appMarketGeneralDao.quaryGeneralStatisticByMonth(app,defaultTime,month2);
+                } catch (Exception e) {
+                    e.printStackTrace();
+                    return null;
+                }
+            }else {
+                return appMarketGeneralDao.quaryGeneralStatisticByMonth(app,month1,month2);
             }
-            return appMarketGeneralDao.quaryGeneralStatisticByMonth(app,month1,month2);
+
         }else if(status.equals("week")){
             return appMarketGeneralDao.quaryGeneralStatisticByWeek(app,month1,month2);
         }else {
@@ -82,41 +100,45 @@ public class AppMarketGeneralServiceImpl implements AppMarketGeneralService{
         Map<String, Object> map =new HashMap<>();
         if(status.equals("month")){
             if (month1.equals("null")){
-                Map<String, String> defaultTime = DefaultTime.getDefaultTime(Constants.YEAR, 1);
-                String startTime = defaultTime.get("startTime");
-                String endTime = defaultTime.get("endTime");
-
-                List list=new ArrayList();
-                List<Map<String, Object>> maplist= appMarketGeneralDao.getRateByMonth(app,month1,month2);
-                List listmonth=new ArrayList();
-                List listmau=new ArrayList();
-                for (Map<String, Object> ob : maplist) {
-                    Object month = ob.get("month");
-                    listmonth.add(month);
-                    Object mau_number = ob.get("mau_number");
-                    listmau.add(mau_number);
-                }
-                //次月存活率
-                Collections.sort(listmonth);
-                for(int i=0;i<listmonth.size();i++){
-                    month1=(String)listmonth.get(0);
-                    month2=(String)listmonth.get(i);
-                    List<Map<String, Object>> list2= appMarketGeneralDao.getRateByMonth(app,month1,month2);
-                    Collections.reverse(list2);
-                    List list4=new ArrayList();
-                    for (Map<String, Object> obmap : list2) {
-                        Object keep_rate = obmap.get("keep_rate");
-                        list4.add(keep_rate);
+                String st1 = month2.substring(0,4);
+                String st2 = month2.substring(4);
+                String months = st1 + "-" + st2;
+                try {
+                    String defaultTime = DefaultTime.getDefaultTimes(Constants.YEAR, 1, months);
+                    List list=new ArrayList();
+                    List<Map<String, Object>> maplist= appMarketGeneralDao.getRateByMonth(app,defaultTime,month2);
+                    List listmonth=new ArrayList();
+                    List listmau=new ArrayList();
+                    for (Map<String, Object> ob : maplist) {
+                        Object month = ob.get("month");
+                        listmonth.add(month);
+                        Object mau_number = ob.get("mau_number");
+                        listmau.add(mau_number);
                     }
-                    list.add(list4);
+                    //次月存活率
+                    for(int i=0;i<listmonth.size();i++){
+                        month1=(String)listmonth.get(i);
+                        month2=(String)listmonth.get(0);
+                        List<Map<String, Object>> list2= appMarketGeneralDao.getRateByMonth(app,month1,month2);
+                        Collections.reverse(list2);
+                        List list4=new ArrayList();
+                        for (Map<String, Object> obmap : list2) {
+                            Object keep_rate = obmap.get("keep_rate");
+                            list4.add(keep_rate);
+                        }
+                        list.add(list4);
+                    }
+                    map.put("rate",list);
+                    String[] st={"时间","活跃用户数(万)","第2月","第3月","第4月","第5月","第6月","第7月","第8月","第9月"};
+                    map.put("time",listmonth);
+                    map.put("num",listmau);
+                    map.put("title",st);
+                    lists.add(map);
+                    return lists;
+                } catch (Exception e) {
+                    e.printStackTrace();
+                    return null;
                 }
-                map.put("rate",list);
-                String[] st={"时间","活跃用户数(万)","第2月","第3月","第4月","第5月","第6月","第7月","第8月","第9月"};
-                map.put("time",listmonth);
-                map.put("num",listmau);
-                map.put("title",st);
-                lists.add(map);
-                return lists;
 
             }else{
                 List list=new ArrayList();
@@ -130,7 +152,6 @@ public class AppMarketGeneralServiceImpl implements AppMarketGeneralService{
                     listmau.add(mau_number);
                 }
                 //次月存活率
-
                 for(int i=0;i<listmonth.size();i++){
                     month1=(String)listmonth.get(i);
                     month2=(String)listmonth.get(0);
@@ -228,12 +249,21 @@ public class AppMarketGeneralServiceImpl implements AppMarketGeneralService{
     @Override
     public List<Map<String, Object>> getUserNumber(Integer app,String month1,String month2,String status) {
         if(status.equals("month")){
-            if (month1.equals("null")){
-                int month1s= Integer.parseInt(month2);
-                month1s=month1s-Constants.DEFAULT_MONTH;
-                month1=Integer.toString(month1s);
+            if (month1.equals("null")) {
+                String st1 = month2.substring(0,4);
+                String st2 = month2.substring(4);
+                String months = st1 + "-" + st2;
+                try {
+                    String defaultTime = DefaultTime.getDefaultTimes(Constants.YEAR, 1, months);
+                    return   appMarketGeneralDao.getUserNumberByMonth(app,defaultTime,month2);
+                } catch (Exception e) {
+                    e.printStackTrace();
+                    return null;
+                }
+            }else {
+                return   appMarketGeneralDao.getUserNumberByMonth(app,month1,month2);
             }
-            return   appMarketGeneralDao.getUserNumberByMonth(app,month1,month2);
+
         }else if(status.equals("week")){
             return   appMarketGeneralDao.getUserNumberByWeek(app,month1,month2);
         }else {
@@ -253,10 +283,12 @@ public class AppMarketGeneralServiceImpl implements AppMarketGeneralService{
         if (list.size() ==0){
             return list;
         }else {
-                int month1 = Integer.parseInt(month);
-                month1 = month1 - 1;
-                String month2 = Integer.toString(month1);
-                List<Map<String, Object>> list1 = appMarketGeneralDao.getMarketMonth(category, app, month2);
+            try {
+                String st1 = month.substring(0,4);
+                String st2 = month.substring(4);
+                String months = st1 + "-" + st2;
+                String defaultTime = DefaultTime.getDefaultTimes(Constants.MONTH, 1, months);
+                List<Map<String, Object>> list1 = appMarketGeneralDao.getMarketMonth(category, app, defaultTime);
                 Map<String, Object> map = list.get(0);
                 if (list.size() != 0 && list1.size() != 0) {
                     Map<String, Object> map1 = list1.get(0);
@@ -310,8 +342,10 @@ public class AppMarketGeneralServiceImpl implements AppMarketGeneralService{
                     map.put("flowState", 1);
                     map.put("keep_rateState", 1);
                 }
+            } catch (Exception e) {
+                e.printStackTrace();
+            }
         }
-
         return list;
     }
     /**
@@ -325,12 +359,21 @@ public class AppMarketGeneralServiceImpl implements AppMarketGeneralService{
     public List<Map<String, Object>> getCumulativeList(int app, String month1, String month2,String status) {
 
         if(status.equals("month")){
-            if (month1.equals("null")){
-                int month1s= Integer.parseInt(month2);
-                month1s=month1s-Constants.DEFAULT_MONTH;
-                month1=Integer.toString(month1s);
+            if (month1.equals("null")) {
+                String st1 = month2.substring(0,4);
+                String st2 = month2.substring(4);
+                String months = st1 + "-" + st2;
+                try {
+                    String defaultTime = DefaultTime.getDefaultTimes(Constants.YEAR, 1, months);
+                    return appMarketGeneralDao.getCumulativeListByMonth(app,defaultTime,month2);
+                } catch (Exception e) {
+                    e.printStackTrace();
+                    return null;
+                }
+            }else {
+                return appMarketGeneralDao.getCumulativeListByMonth(app,month1,month2);
             }
-            return appMarketGeneralDao.getCumulativeListByMonth(app,month1,month2);
+
         }else if(status.equals("week")){
             return appMarketGeneralDao.getCumulativeListByWeek(app,month1,month2);
         }else {
diff --git a/index-server/src/main/java/com/cmri/um/he/index/market/service/impl/AppMarketServiceImpl.java b/index-server/src/main/java/com/cmri/um/he/index/market/service/impl/AppMarketServiceImpl.java
index e2b1d79..778b369 100644
--- a/index-server/src/main/java/com/cmri/um/he/index/market/service/impl/AppMarketServiceImpl.java
+++ b/index-server/src/main/java/com/cmri/um/he/index/market/service/impl/AppMarketServiceImpl.java
@@ -1,6 +1,7 @@
 package com.cmri.um.he.index.market.service.impl;
 
 import com.cmri.um.he.index.common.Constants;
+import com.cmri.um.he.index.common.DefaultTime;
 import com.cmri.um.he.index.market.dao.AppMarketDao;
 import com.cmri.um.he.index.market.service.AppMarketService;
 import org.springframework.beans.factory.annotation.Autowired;
@@ -41,11 +42,20 @@ public class AppMarketServiceImpl implements AppMarketService {
     public List<Map<String, Object>> getMarket(int category, String month1, String month2,String status) {
         if (status.equals("month")) {
             if (month1.equals("null")) {
-                int month2s = Integer.parseInt(month2);
-                month2s = month2s - Constants.DEFAULT_MONTHS;
-                month1 = Integer.toString(month2s);
+                String st1 = month2.substring(0,4);
+                String st2 = month2.substring(4);
+                String months = st1 + "-" + st2;
+                try {
+                    String defaultTime = DefaultTime.getDefaultTimes(Constants.YEAR, 1, months);
+                    return appMarketDao.getMarketByMonth(category, defaultTime, month2);
+                } catch (Exception e) {
+                    e.printStackTrace();
+                    return null;
+                }
+            }else {
+                return appMarketDao.getMarketByMonth(category, month1, month2);
             }
-            return appMarketDao.getMarketByMonth(category, month1, month2);
+
         } else if (status.equals("week")) {
             return appMarketDao.getMarketByWeek(category, month1, month2);
         } else{
diff --git a/patches/shihao-patch_modifyComment.patch b/patches/shihao-patch_modifyComment.patch
index 20cb875..8f40070 100644
--- a/patches/shihao-patch_modifyComment.patch
+++ b/patches/shihao-patch_modifyComment.patch
@@ -1,532 +0,0 @@
-diff --git a/index-server/src/main/java/com/cmri/um/he/index/market/controller/AppMarketAddController.java b/index-server/src/main/java/com/cmri/um/he/index/market/controller/AppMarketAddController.java
-new file mode 100644
-index 0000000..58f9c56
---- /dev/null
-+++ b/index-server/src/main/java/com/cmri/um/he/index/market/controller/AppMarketAddController.java
-@@ -0,0 +1,7 @@
-+package com.cmri.um.he.index.market.controller;
-+
-+import com.cmri.spring.common.controller.ZRestController;
-+
-+public class AppMarketAddController extends ZRestController {
-+
-+}
-diff --git a/index-server/src/main/java/com/cmri/um/he/index/market/dao/AppMarketGeneralDao.java b/index-server/src/main/java/com/cmri/um/he/index/market/dao/AppMarketGeneralDao.java
-index 6ed5f54..d59e593 100644
---- a/index-server/src/main/java/com/cmri/um/he/index/market/dao/AppMarketGeneralDao.java
-+++ b/index-server/src/main/java/com/cmri/um/he/index/market/dao/AppMarketGeneralDao.java
-@@ -89,15 +89,6 @@ public class AppMarketGeneralDao extends BaseDao{
-     }
- 
-     /**
--     * 查询该app的最新月份数据
--     * @param app
--     * @return
--     */
--    public String getNewMonth(Integer app){
--            String  month=  mapper.getNewMonth(app);
--            return  month;
--    }
--    /**
-      * 查询次月存留率(根据周区间)
-      * @return
-      */
-@@ -106,15 +97,6 @@ public class AppMarketGeneralDao extends BaseDao{
-     }
- 
-     /**
--     * 查询该app的最新周份数据
--     * @param app
--     * @return
--     */
--    public String getNewWeek(Integer app){
--        String  month=  mapper.getNewWeek(app);
--        return  month;
--    }
--    /**
-      * 查询次月存留率(根据日区间)
-      * @return
-      */
-@@ -122,15 +104,6 @@ public class AppMarketGeneralDao extends BaseDao{
-         return mapper.getRateByDate(app,month1,month2);
-     }
-     /**
--     * 查询该app的最新周份数据
--     * @param app
--     * @return
--     */
--    public String getNewDate(Integer app){
--        String  month=  mapper.getNewDate(app);
--        return  month;
--    }
--    /**
-      * 查询月活跃用户(根据月份区间)
-      * @param app
-      * @param month1
-diff --git a/index-server/src/main/java/com/cmri/um/he/index/market/mapper/AppMarketGeneralMapper.java b/index-server/src/main/java/com/cmri/um/he/index/market/mapper/AppMarketGeneralMapper.java
-index 380e6c4..44c9e64 100644
---- a/index-server/src/main/java/com/cmri/um/he/index/market/mapper/AppMarketGeneralMapper.java
-+++ b/index-server/src/main/java/com/cmri/um/he/index/market/mapper/AppMarketGeneralMapper.java
-@@ -32,7 +32,7 @@ public interface AppMarketGeneralMapper {
-      * @param month2
-      * @return
-      */
--    @Select("SELECT am.`length_time` as lengthTime,am.`flow` as flow,am.`month` FROM app_market_week am WHERE app=#{app} AND am.`month` BETWEEN #{month1} AND #{month2} ORDER BY am.`month`")
-+    @Select("SELECT am.`weekly_duration_per_person` as lengthTime,am.`weekly_dataflow_per_person` as flow,am.`week`AS month FROM app_market_week am WHERE app=#{app} AND am.`week` BETWEEN #{month1} AND #{month2} ORDER BY am.`week`")
-     List<Map<String, Object>> getLengthTimeByWeek(@Param("app") Integer app,@Param("month1") String month1,@Param("month2") String month2);
- 
-     /**
-@@ -42,7 +42,7 @@ public interface AppMarketGeneralMapper {
-      * @param month2
-      * @return
-      */
--    @Select("SELECT am.`length_time` as lengthTime,am.`flow` as flow,am.`month` FROM app_market_date am WHERE app=#{app} AND am.`month` BETWEEN #{month1} AND #{month2} ORDER BY am.`month`")
-+    @Select("SELECT am.`dately_duration_per_person` as lengthTime,am.`dately_dataflow_per_person` as flow,am.`date`AS month FROM app_market_date am WHERE app=#{app} AND am.`date` BETWEEN #{month1} AND #{month2} ORDER BY am.`date`")
-     List<Map<String, Object>> getLengthTimeBydate(@Param("app") Integer app,@Param("month1") String month1,@Param("month2") String month2);
- 
-     /**
-@@ -62,7 +62,7 @@ public interface AppMarketGeneralMapper {
-      * @param month2
-      * @return
-      */
--    @Select("SELECT am.`total_user` AS totalUser,am.`new_user` AS newUser,am.`mau_number` AS mauNumber,am.`keep_rate` AS keepRate,am.`length_time` AS lengthTime,am.`flow` AS flow,am.`month` FROM app_market_week am WHERE app=#{app} AND am.`month` BETWEEN #{month1} AND #{month2} ORDER BY am.`month`\n")
-+    @Select("SELECT am.`total_active_num` AS totalUser,am.`new_user` AS newUser,am.`weekly_active` AS mauNumber,am.`active_next_week_retention_rate` AS keepRate,am.`weekly_duration_per_person` AS lengthTime,am.`weekly_dataflow_per_person` AS flow,am.`week` AS month FROM app_market_week am WHERE app=#{app} AND am.`week` BETWEEN #{month1} AND #{month2} ORDER BY am.`week`\n")
-     List<Map<String,Object>> quaryGeneralStatisticByWeek(@Param("app")Integer app,@Param("month1")String month1,@Param("month2")String month2);
- 
-     /**
-@@ -72,7 +72,7 @@ public interface AppMarketGeneralMapper {
-      * @param month2
-      * @return
-      */
--    @Select("SELECT am.`total_user` AS totalUser,am.`new_user` AS newUser,am.`mau_number` AS mauNumber,am.`keep_rate` AS keepRate,am.`length_time` AS lengthTime,am.`flow` AS flow,am.`month` FROM app_market_date am WHERE app=#{app} AND am.`month` BETWEEN #{month1} AND #{month2} ORDER BY am.`month`\n")
-+    @Select("SELECT am.`total_active_num` AS totalUser,am.`new_user` AS newUser,am.`dately_active` AS mauNumber,am.`active_next_date_retention_rate` AS keepRate,am.`dately_duration_per_person` AS lengthTime,am.`dately_dataflow_per_person` AS flow,am.`date`AS month FROM app_market_date am WHERE app=#{app} AND am.`date` BETWEEN #{month1} AND #{month2} ORDER BY am.`date`\n")
-     List<Map<String,Object>> quaryGeneralStatisticByDate(@Param("app")Integer app,@Param("month1")String month1,@Param("month2")String month2);
- 
-     /**
-@@ -87,14 +87,6 @@ public interface AppMarketGeneralMapper {
-     List<Map<String, Object>> getRateByMonth(@Param("app")Integer app,@Param("month1")String month1,@Param("month2")String month2);
- 
-     /**
--     * 查询该app的最新月份数据
--     * @param app
--     * @return
--     */
--    @Select("select month from app_market where app=#{app} order by month desc limit 1")
--    String getNewMonth(@Param("app")Integer app);
--
--    /**
-      * 查询次月存留率(根据周区间)
-      * @param app
-      * @param month1
-@@ -102,15 +94,8 @@ public interface AppMarketGeneralMapper {
-      * @return
-      */
-     @Select("select category,app, week ,weekly_active ,active_next_week_retention_rate  from app_market_week \n" +
--            "where app=#{app} and week BETWEEN #{month1} and #{month2} ORDER BY week desc\n")
-+            "where app=#{app} and week BETWEEN #{month1} and #{month2} ORDER BY week desc \n")
-     List<Map<String, Object>> getRateByWeek(@Param("app")Integer app,@Param("month1")String month1,@Param("month2")String month2);
--    /**
--     * 查询该app的最新周数据
--     * @param app
--     * @return
--     */
--    @Select("select week from app_market_week where app=#{app} order by week desc limit 1")
--    String getNewWeek(@Param("app")Integer app);
- 
-     /**
-      * 查询次月存留率(根据日区间)
-@@ -120,15 +105,8 @@ public interface AppMarketGeneralMapper {
-      * @return
-      */
-     @Select("select category,app, date ,dately_active ,active_next_date_retention_rate  from app_market_date \n" +
--            "where app=#{app} and date BETWEEN #{month1} and #{month2} ORDER BY date desc\n")
-+            "where app=#{app} and date BETWEEN #{month1} and #{month2} ORDER BY date desc \n")
-     List<Map<String, Object>> getRateByDate(@Param("app")Integer app,@Param("month1")String month1,@Param("month2")String month2);
--    /**
--     * 查询该app的最新日数据
--     * @param app
--     * @return
--     */
--    @Select("select date from app_market_date where app=#{app} order by date desc limit 1")
--    String getNewDate(@Param("app")Integer app);
- 
-     /**
-      * 查存月活跃用户(根据月份区间)
-@@ -137,7 +115,7 @@ public interface AppMarketGeneralMapper {
-      * @param month2
-      * @return
-      */
--    @Select("SELECT m.app , m.new_user ,m.mau_number,m.month\n" +
-+    @Select("SELECT m.app , m.new_user ,m.mau_number,m.month \n" +
-             "from app_market m\n" +
-             "where m.app=#{app} and m.month BETWEEN #{month1} and #{month2} ORDER BY m.month")
-     List<Map<String, Object>> getUserNumberByMonth(@Param("app") Integer app,@Param("month1") String  month1,@Param("month2") String  month2 );
-@@ -148,9 +126,9 @@ public interface AppMarketGeneralMapper {
-      * @param month2
-      * @return
-      */
--    @Select("SELECT m.app , m.new_user ,m.mau_number,m.month\n" +
-+    @Select("SELECT m.app , m.new_user ,m.weekly_active AS mau_number,m.week AS month\n" +
-             "from app_market_week m\n" +
--            "where m.app=#{app} and m.month BETWEEN #{month1} and #{month2} ORDER BY m.month")
-+            "where m.app=#{app} and m.week BETWEEN #{month1} and #{month2} ORDER BY m.week")
-     List<Map<String, Object>> getUserNumberByWeek(@Param("app") Integer app,@Param("month1") String  month1,@Param("month2") String  month2 );
- 
-     /**
-@@ -160,9 +138,9 @@ public interface AppMarketGeneralMapper {
-      * @param month2
-      * @return
-      */
--    @Select("SELECT m.app , m.new_user ,m.mau_number,m.month\n" +
-+    @Select("SELECT m.app , m.new_user ,m.dately_active AS mau_number,m.date AS month\n" +
-             "from app_market_date m\n" +
--            "where m.app=#{app} and m.month BETWEEN #{month1} and #{month2} ORDER BY m.month")
-+            "where m.app=#{app} and m.date BETWEEN #{month1} and #{month2} ORDER BY m.date")
-     List<Map<String, Object>> getUserNumberBydate(@Param("app") Integer app,@Param("month1") String  month1,@Param("month2") String  month2 );
- 
-     /**
-@@ -192,7 +170,7 @@ public interface AppMarketGeneralMapper {
-      * @param month2
-      * @return
-      */
--    @Select(" SELECT am.total_user,am.`month` FROM app_market am WHERE am.app=#{app} and am.`month` BETWEEN #{month1} and #{month2} ")
-+    @Select(" SELECT am.total_user,am.`month` FROM app_market am WHERE am.app=#{app} and am.`week` BETWEEN #{month1} and #{month2} ")
-     List<Map<String,Object>> getCumulativeListByMonth(@Param("app") int app,@Param("month1") String month1,@Param("month2") String month2);
- 
-     /**
-@@ -202,7 +180,7 @@ public interface AppMarketGeneralMapper {
-      * @param month2
-      * @return
-      */
--    @Select(" SELECT am.total_user,am.`month` FROM app_market_week am WHERE am.app=#{app} and am.`month` BETWEEN #{month1} and #{month2} ")
-+    @Select(" SELECT am.total_active_num AS total_user,am.`week` AS month FROM app_market_week am WHERE am.app=#{app} and am.`week` BETWEEN #{month1} and #{month2} ")
-     List<Map<String,Object>> getCumulativeListByWeek(@Param("app") int app,@Param("month1") String month1,@Param("month2") String month2);
- 
-     /**
-@@ -212,6 +190,6 @@ public interface AppMarketGeneralMapper {
-      * @param month2
-      * @return
-      */
--    @Select(" SELECT am.total_user,am.`month` FROM app_market_date am WHERE am.app=#{app} and am.`month` BETWEEN #{month1} and #{month2} ")
-+    @Select(" SELECT am.total_active_num AS total_user ,am.`date`AS month FROM app_market_date am WHERE am.app=#{app} and am.`date` BETWEEN #{month1} and #{month2} ")
-     List<Map<String,Object>> getCumulativeListByDate(@Param("app") int app,@Param("month1") String month1,@Param("month2") String month2);
- }
-diff --git a/index-server/src/main/java/com/cmri/um/he/index/market/service/impl/AppMarketGeneralServiceImpl.java b/index-server/src/main/java/com/cmri/um/he/index/market/service/impl/AppMarketGeneralServiceImpl.java
-index 5388860..982f150 100644
---- a/index-server/src/main/java/com/cmri/um/he/index/market/service/impl/AppMarketGeneralServiceImpl.java
-+++ b/index-server/src/main/java/com/cmri/um/he/index/market/service/impl/AppMarketGeneralServiceImpl.java
-@@ -7,10 +7,7 @@ import com.cmri.um.he.index.market.service.AppMarketGeneralService;
- import org.springframework.beans.factory.annotation.Autowired;
- import org.springframework.stereotype.Service;
- 
--import java.util.ArrayList;
--import java.util.HashMap;
--import java.util.List;
--import java.util.Map;
-+import java.util.*;
- 
- /**
-  * 默认展示时获取查询时间通用方法
-@@ -88,27 +85,24 @@ public class AppMarketGeneralServiceImpl implements AppMarketGeneralService{
-                 Map<String, String> defaultTime = DefaultTime.getDefaultTime(Constants.YEAR, 1);
-                 String startTime = defaultTime.get("startTime");
-                 String endTime = defaultTime.get("endTime");
--                //查询当前月
--                String newMonth= appMarketGeneralDao.getNewMonth(app);
-+
-                 List list=new ArrayList();
--                int month3= Integer.parseInt(startTime);
--                int month4= Integer.parseInt(endTime);
--                int newMonths=Integer.parseInt(newMonth);
--                if(month4>newMonths){
--                    month4=newMonths;
--                }
--                if(month4>month3){
--                    month2=month1;
--                    List list5=new ArrayList();
--                    List<Map<String, Object>> list1= appMarketGeneralDao.getRateByMonth(app,month1,month2);
--                    Object keep_rate = list1.get(0).get("keep_rate");
--                    list5.add(keep_rate);
--                    list.add(list5);
-+                List<Map<String, Object>> maplist= appMarketGeneralDao.getRateByMonth(app,month1,month2);
-+                List listmonth=new ArrayList();
-+                List listmau=new ArrayList();
-+                for (Map<String, Object> ob : maplist) {
-+                    Object month = ob.get("month");
-+                    listmonth.add(month);
-+                    Object mau_number = ob.get("mau_number");
-+                    listmau.add(mau_number);
-                 }
--                for(int i=month3;i<month4;i++){
--                    int month5=++month3;
--                    month2=Integer.toString(month5);
-+                //次月存活率
-+                Collections.sort(listmonth);
-+                for(int i=0;i<listmonth.size();i++){
-+                    month1=(String)listmonth.get(0);
-+                    month2=(String)listmonth.get(i);
-                     List<Map<String, Object>> list2= appMarketGeneralDao.getRateByMonth(app,month1,month2);
-+                    Collections.reverse(list2);
-                     List list4=new ArrayList();
-                     for (Map<String, Object> obmap : list2) {
-                         Object keep_rate = obmap.get("keep_rate");
-@@ -116,56 +110,16 @@ public class AppMarketGeneralServiceImpl implements AppMarketGeneralService{
-                     }
-                     list.add(list4);
-                 }
--                //次月存活率
-                 map.put("rate",list);
--                List<Map<String, Object>> maplist= appMarketGeneralDao.getRateByMonth(app,month1,month2);
--                List listmonth=new ArrayList();
--                List listmau=new ArrayList();
--                for (Map<String, Object> ob : maplist) {
--                    Object month = ob.get("month");
--                    listmonth.add(month);
--                    Object mau_number = ob.get("mau_number");
--                    listmau.add(mau_number);
--                }
-                 String[] st={"时间","活跃用户数(万)","第2月","第3月","第4月","第5月","第6月","第7月","第8月","第9月"};
-                 map.put("month",listmonth);
-                 map.put("num",listmau);
-                 map.put("title",st);
-                 lists.add(map);
--
-                 return lists;
- 
-             }else{
--                //查询最新月
--                String newMonth= appMarketGeneralDao.getNewMonth(app);
-                 List list=new ArrayList();
--                int month3= Integer.parseInt(month1);
--                int month4= Integer.parseInt(month2);
--                int newMonths=Integer.parseInt(newMonth);
--                if(month4>newMonths){
--                    month4=newMonths;
--                }
--                if(month4>month3){
--                    month2=month1;
--                    List list5=new ArrayList();
--                    List<Map<String, Object>> list1= appMarketGeneralDao.getRateByMonth(app,month1,month2);
--                    Object keep_rate = list1.get(0).get("keep_rate");
--                    list5.add(keep_rate);
--                    list.add(list5);
--                }
--                for(int i=month3;i<month4;i++){
--                    int month5=++month3;
--                    month2=Integer.toString(month5);
--                    List<Map<String, Object>> list2= appMarketGeneralDao.getRateByMonth(app,month1,month2);
--                    List list4=new ArrayList();
--                    for (Map<String, Object> obmap : list2) {
--                        Object keep_rate = obmap.get("keep_rate");
--                        list4.add(keep_rate);
--                    }
--                    list.add(list4);
--                }
--                //次月存活率
--                map.put("rate",list);
-                 List<Map<String, Object>> maplist= appMarketGeneralDao.getRateByMonth(app,month1,month2);
-                 List listmonth=new ArrayList();
-                 List listmau=new ArrayList();
-@@ -175,47 +129,31 @@ public class AppMarketGeneralServiceImpl implements AppMarketGeneralService{
-                     Object mau_number = ob.get("mau_number");
-                     listmau.add(mau_number);
-                 }
-+                //次月存活率
-+
-+                for(int i=0;i<listmonth.size();i++){
-+                    month1=(String)listmonth.get(i);
-+                    month2=(String)listmonth.get(0);
-+                    List<Map<String, Object>> list2= appMarketGeneralDao.getRateByMonth(app,month1,month2);
-+                    Collections.reverse(list2);
-+                    List list4=new ArrayList();
-+                    for (Map<String, Object> obmap : list2) {
-+                        Object keep_rate = obmap.get("keep_rate");
-+                        list4.add(keep_rate);
-+                    }
-+                    list.add(list4);
-+                }
-                 String[] st={"时间","活跃用户数(万)","第2月","第3月","第4月","第5月","第6月","第7月","第8月","第9月"};
--                map.put("month",listmonth);
--                map.put("num",listmau);
-+                map.put("time",listmonth);
-+                map.put("user_number",listmau);
-                 map.put("title",st);
-+                map.put("rate",list);
-                 lists.add(map);
--
-                 return lists;
-             }
- 
-         }else if(status.equals("week")){
--            //查询最新周
--            String newWeek= appMarketGeneralDao.getNewWeek(app);
-             List list=new ArrayList();
--            int month3= Integer.parseInt(month1);
--            int month4= Integer.parseInt(month2);
--            int newWeeks=Integer.parseInt(newWeek);
--            if(month4>newWeeks){
--                month4=newWeeks;
--            }
--            if(month4>month3){
--                month2=month1;
--                List list5=new ArrayList();
--                List<Map<String, Object>> list1= appMarketGeneralDao.getRateByWeek(app,month1,month2);
--                Object keep_rate = list1.get(0).get("active_next_week_retention_rate");
--                list5.add(keep_rate);
--                list.add(list5);
--            }
--
--            for(int i=month3;i<month4;i++){
--                int month5=++month3;
--                month2=Integer.toString(month5);
--                List<Map<String, Object>> list2= appMarketGeneralDao.getRateByWeek(app,month1,month2);
--                List list4=new ArrayList();
--                for (Map<String, Object> obmap : list2) {
--                    Object keep_rate = obmap.get("active_next_week_retention_rate");
--                    list4.add(keep_rate);
--                }
--                list.add(list4);
--            }
--            //次周存活率
--            map.put("rate",list);
-             List<Map<String, Object>> maplist= appMarketGeneralDao.getRateByWeek(app,month1,month2);
-             List listweek=new ArrayList();
-             List listmau=new ArrayList();
-@@ -225,45 +163,29 @@ public class AppMarketGeneralServiceImpl implements AppMarketGeneralService{
-                 Object weeky_active = ob.get("weekly_active");
-                 listmau.add(weeky_active);
-             }
--            String[] st={"时间","活跃用户数(万)","第2周","第3周","第4周","第5周","第6周","第7周","第8周","第9周"};
--            map.put("week",listweek);
--            map.put("weekly_active",listmau);
--            map.put("title",st);
--            lists.add(map);
--
--            return lists;
--        }else {
--            //查询当前日
--            String newDate= appMarketGeneralDao.getNewDate(app);
--            List list=new ArrayList();
--            int month3= Integer.parseInt(month1);
--            int month4= Integer.parseInt(month2);
--            int newDates=Integer.parseInt(newDate);
--            if(month4>newDates){
--                month4=newDates;
--            }
--            if(month4>month3){
--                month2=month1;
--                List list5=new ArrayList();
--                List<Map<String, Object>> list1= appMarketGeneralDao.getRateByDate(app,month1,month2);
--                Object keep_rate = list1.get(0).get("active_next_date_retention_rate");
--                list5.add(keep_rate);
--                list.add(list5);
--            }
--
--            for(int i=month3;i<month4;i++){
--                int month5=++month3;
--                month2=Integer.toString(month5);
--                List<Map<String, Object>> list2= appMarketGeneralDao.getRateByDate(app,month1,month2);
-+            //次周存活率
-+            for(int i=0;i<listweek.size();i++){
-+                month1=(String)listweek.get(i);
-+                month2=(String)listweek.get(0);
-+                List<Map<String, Object>> list2= appMarketGeneralDao.getRateByWeek(app,month1,month2);
-+                Collections.reverse(list2);
-                 List list4=new ArrayList();
-                 for (Map<String, Object> obmap : list2) {
--                    Object keep_rate = obmap.get("active_next_date_retention_rate");
-+                    Object keep_rate = obmap.get("active_next_week_retention_rate");
-                     list4.add(keep_rate);
-                 }
-                 list.add(list4);
-             }
--            //次日存活率
-+
-+            String[] st={"时间","活跃用户数(万)","第2周","第3周","第4周","第5周","第6周","第7周","第8周","第9周"};
-+            map.put("time",listweek);
-+            map.put("user_number",listmau);
-+            map.put("title",st);
-             map.put("rate",list);
-+            lists.add(map);
-+            return lists;
-+        }else {
-+            List list=new ArrayList();
-             List<Map<String, Object>> maplist= appMarketGeneralDao.getRateByDate(app,month1,month2);
-             List listdate=new ArrayList();
-             List listmau=new ArrayList();
-@@ -273,10 +195,24 @@ public class AppMarketGeneralServiceImpl implements AppMarketGeneralService{
-                 Object dately_active = ob.get("dately_active");
-                 listmau.add(dately_active);
-             }
-+            //次日存活率
-+            for(int i=0;i<listdate.size();i++){
-+                month1=(String)listdate.get(i);
-+                month2=(String)listdate.get(0);
-+                List<Map<String, Object>> list2= appMarketGeneralDao.getRateByDate(app,month1,month2);
-+                Collections.reverse(list2);
-+                List list4=new ArrayList();
-+                for (Map<String, Object> obmap : list2) {
-+                    Object keep_rate = obmap.get("active_next_date_retention_rate");
-+                    list4.add(keep_rate);
-+                }
-+                list.add(list4);
-+            }
-             String[] st={"时间","活跃用户数(万)","第2日","第3日","第4日","第5日","第6日","第7日","第15日","第30日"};
--            map.put("date",listdate);
--            map.put("dately_active",listmau);
-+            map.put("time",listdate);
-+            map.put("user_number",listmau);
-             map.put("title",st);
-+            map.put("rate",list);
-             lists.add(map);
-             return lists;
-         }
-diff --git a/patches/shihao-patch_modifyComment.patch b/patches/shihao-patch_modifyComment.patch
-index 3a807df..3a13355 100644
---- a/patches/shihao-patch_modifyComment.patch
-+++ b/patches/shihao-patch_modifyComment.patch
-@@ -1,44 +0,0 @@
--diff --git a/patches/shihao-patch_modifyComment.patch b/patches/shihao-patch_modifyComment.patch
--index c7f7eb7..e69de29 100644
----- a/patches/shihao-patch_modifyComment.patch
--+++ b/patches/shihao-patch_modifyComment.patch
--@@ -1,39 +0,0 @@
---diff --git a/index-server/src/main/java/com/cmri/um/he/index/controller/AppMonthController.java b/index-server/src/main/java/com/cmri/um/he/index/controller/AppMonthController.java
---index d673c5c..23c7bd1 100644
------ a/index-server/src/main/java/com/cmri/um/he/index/controller/AppMonthController.java
---+++ b/index-server/src/main/java/com/cmri/um/he/index/controller/AppMonthController.java
---@@ -2,11 +2,15 @@ package com.cmri.um.he.index.controller;
--- 
--- import com.cmri.spring.common.controller.ZRestController;
--- import com.cmri.spring.common.data.ResponseMessage;
----import com.cmri.um.he.index.service.AppEmotionService;
--- import com.cmri.um.he.index.service.AppMonthService;
--- import org.springframework.beans.factory.annotation.Autowired;
----import org.springframework.web.bind.annotation.*;
---+import org.springframework.web.bind.annotation.CrossOrigin;
---+import org.springframework.web.bind.annotation.RequestMapping;
---+import org.springframework.web.bind.annotation.RequestMethod;
---+import org.springframework.web.bind.annotation.RestController;
--- 
---+import javax.servlet.http.Cookie;
---+import javax.servlet.http.HttpServletResponse;
--- import java.util.List;
--- import java.util.Map;
--- 
---@@ -24,10 +28,15 @@ public class AppMonthController extends ZRestController {
---     private AppMonthService appMonthService;
--- 
---     @RequestMapping(method = RequestMethod.GET)
----    public ResponseMessage get(){
---+    public ResponseMessage get(HttpServletResponse response){
---         List<Map<String, Object>> maps = appMonthService.findMonths();
---         ResponseMessage responseMessage = this.genResponseMessage();
---         responseMessage.set("items",maps);
---+        Map<String, Object> map = maps.get(0);
---+        String month = (String)map.get("month");
---+        Cookie cookie=new Cookie("newmonth",month);
---+        cookie.setMaxAge(300);
---+        response.addCookie(cookie);
---         return responseMessage;
---     }
--- }
